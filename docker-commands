Create new docker machine against a proxy
*****************************************
docker-machine create -d virtualbox --engine-env HTTP_PROXY=http://181875:Ocean11%402001@proxy.tcs.com:8080 --engine-env HTTPS_PROXY=https://181875:Ocean11%402001@proxy.tcs.com:8080 --engine-env NO_PROXY=192.168.99.100 TestDcoker

To see the list of machine
---------------------------
docker-machine ls

Go to specific mahcine terminal
-------------------------------
docker-machine ssh <name of the machine>  docker-machine ssh TestDcoker

To check whether the proxy is set
--------------------------------
181875@01HW509160 MINGW64 ~
$ docker-machine ssh TestDcoker
                        ##         .
                  ## ## ##        ==
               ## ## ## ## ##    ===
           /"""""""""""""""""\___/ ===
      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~
           \______ o           __/
             \    \         __/
              \____\_______/
 _                 _   ____     _            _
| |__   ___   ___ | |_|___ \ __| | ___   ___| | _____ _ __
| '_ \ / _ \ / _ \| __| __) / _` |/ _ \ / __| |/ / _ \ '__|
| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |
|_.__/ \___/ \___/ \__|_____\__,_|\___/ \___|_|\_\___|_|
Boot2Docker version 1.13.0, build HEAD : 5b8d9cb - Wed Jan 18 18:50:40 UTC 2017
Docker version 1.13.0, build 49bf474
docker@TestDcoker:~$ cat /var/lib/boot2docker/profile

EXTRA_ARGS='
--label provider=virtualbox

'
CACERT=/var/lib/boot2docker/ca.pem
DOCKER_HOST='-H tcp://0.0.0.0:2376'
DOCKER_STORAGE=aufs
DOCKER_TLS=auto
SERVERKEY=/var/lib/boot2docker/server-key.pem
SERVERCERT=/var/lib/boot2docker/server.pem

export "HTTP_PROXY=http://181875:Ocean11%402001@proxy.tcs.com:8080"
export "HTTPS_PROXY=https://181875:Ocean11%402001@proxy.tcs.com:8080"
export "NO_PROXY=192.168.99.100"

docker@TestDcoker:~$


How to edit the values in the profile
--------------------------------------
docker@default:~$ vi /var/lib/boot2docker/profile

press insert key  -> i and edit the values
pres esc and then shift + colon(:)wq!  - > this will save the file

While saving if it says "Permission Denied" then do shift + colon(:)q! which takes you to the terminal docker@default:~$
Then do the following
docker@default:~$ sudo -s
root@default:/home/docker# vi /var/lib/boot2docker/profile

To pull mongo db image 
************************
docker@default:~$ docker pull mongo:latest


launch your Mongo container:
 ******************************
docker@TestDcoker:~$ docker run --name some-mongo -d mongo  // name here is some-mongo which is not mandataory
(or)
docker@TestDcoker:~$ docker run -d -p 27017:27017 mongo

to see logs
***********
docker@TestDcoker:~$ docker logs <containerid> 

The running containers can be checked by:
******************************************
docker ps   // displays only running container

docker ps -a // displays all container

Go to VM and choose setting and then network then click port forwarding and enter 
*********************************************************************************
host port and guest port as 27017

How to use node in docker

First get the latest node image:
**********************************
docker pull node:latest

to launch the NodeJS container run:
***********************************
docker run -it --rm node   (or) docker run -it node 

This will run the node container and will put you in the interactive shell (REPL) from which you can execute code. 
You can test it by entering:
console.log("It works")

To exit the interactive shell and remove the container (as it contains --rm option) press Control+C twice.


to see the list of images
*************************
docker@TestDcoker:~$ docker images

Docker: Remove all images and containers
****************************************

#!/bin/bash
# Delete all containers
docker rm $(docker ps -a -q)
# Delete all images
docker rmi $(docker images -q)
